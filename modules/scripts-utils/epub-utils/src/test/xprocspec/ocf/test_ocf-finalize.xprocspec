<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.daisy.org/ns/xprocspec"
               xmlns:px="http://www.daisy.org/ns/pipeline/xproc"
               xmlns:d="http://www.daisy.org/ns/pipeline/data"
               xmlns:c="http://www.w3.org/ns/xproc-step"
               xmlns:manifest="urn:oasis:names:tc:opendocument:xmlns:manifest:1.0"
               script="../../../main/resources/xml/ocf/ocf-finalize.xpl">

	<x:scenario label="test-default">
		<x:call step="px:epub3-ocf-finalize">
			<x:input port="source">
				<x:document type="inline">
					<d:fileset xml:base="file:/tmp/dir/">
						<d:file href="Content/package.opf"/>
					</d:fileset>
				</x:document>
			</x:input>
		</x:call>
		<x:context label="the result port">
			<x:document type="port" port="result"/>
		</x:context>
		<x:expect label="the result" type="compare">
			<x:document type="inline">
				<d:fileset xml:base="file:/tmp/dir/">
					<d:file href="Content/package.opf"/>
					<d:file media-type="application/xml" href="META-INF/container.xml"/>
				</d:fileset>
			</x:document>
		</x:expect>
	</x:scenario>
	
	<x:scenario label="test-multiple-opf">
		<x:call step="px:epub3-ocf-finalize">
			<x:input port="source">
				<x:document type="inline">
					<d:fileset xml:base="file:/tmp/dir/">
						<d:file href="Content/package.opf"/>
						<d:file href="Alternate/other.opf"/>
					</d:fileset>
				</x:document>
			</x:input>
		</x:call>
		<x:context label="the result port">
			<x:document type="port" port="result"/>
		</x:context>
		<x:expect label="the result" type="compare">
			<x:document type="inline">
				<d:fileset xml:base="file:/tmp/dir/">
					<d:file href="Content/package.opf"/>
					<d:file href="Alternate/other.opf"/>
					<d:file media-type="application/xml" href="META-INF/container.xml"/>
				</d:fileset>
			</x:document>
		</x:expect>
		<x:context label="the container port">
			<x:document type="port" port="container"/>
		</x:context>
		<x:expect label="the container document" type="compare">
			<x:document type="inline">
				<container xmlns="urn:oasis:names:tc:opendocument:xmlns:container" version="1.0">
					<rootfiles>
						<rootfile full-path="Content/package.opf"
						          media-type="application/oebps-package+xml"/>
						<rootfile full-path="Alternate/other.opf"
						          media-type="application/oebps-package+xml"/>
					</rootfiles>
				</container>
			</x:document>
		</x:expect>
	</x:scenario>
	
	<x:scenario label="test-no-opf">
		<x:call step="px:epub3-ocf-finalize">
			<x:input port="source">
				<x:document type="inline">
					<d:fileset xml:base="file:/tmp/dir/">
					</d:fileset>
				</x:document>
			</x:input>
		</x:call>
		<x:context label="the errors">
			<x:document type="errors"/>
		</x:context>
		<x:expect label="there should be errors" type="count" min="1"/>
		<x:expect label="there should be a err:EOU002 error" type="xpath"
		          test="exists(/c:errors/c:error[resolve-QName(@code,.)=QName('http://www.w3.org/ns/xproc-error','err:EOU002')])"/>
		<x:expect label="the error message" type="xpath"
		          test="/c:errors/c:error[resolve-QName(@code,.)=QName('http://www.w3.org/ns/xproc-error','err:EOU002')]
		                /normalize-space(string(.))"
		          equals="'No OPF was found in the source file set.'"/>
	</x:scenario>
	
	<x:scenario label="test-create-odf-manifest">
		<x:call step="px:epub3-ocf-finalize">
			<x:input port="source">
				<x:document type="inline">
					<d:fileset xml:base="file:/tmp/dir/">
						<d:file href="Content/package.opf" media-type="application/oebps-package+xml"/>
					</d:fileset>
				</x:document>
			</x:input>
			<x:option name="create-odf-manifest" select="true()"/>
		</x:call>
		<x:context label="the result port">
			<x:document type="port" port="result"/>
		</x:context>
		<x:expect label="the result" type="compare">
			<x:document type="inline">
				<d:fileset xml:base="file:/tmp/dir/">
					<d:file href="Content/package.opf" media-type="application/oebps-package+xml"/>
					<d:file media-type="application/xml" href="META-INF/container.xml"/>
					<d:file media-type="application/xml" href="META-INF/manifest.xml"/>
				</d:fileset>
			</x:document>
		</x:expect>
		<x:context label="the manifest document on the in-memory.out port">
			<x:document type="port" port="in-memory.out" select="/*[base-uri()='file:/tmp/dir/META-INF/manifest.xml']"/>
		</x:context>
		<x:expect label="the manifest document" type="compare">
			<x:document type="inline">
				<manifest:manifest manifest:version="1.2">
					<manifest:file-entry manifest:full-path="Content/package.opf" manifest:media-type="application/oebps-package+xml"/>
					<manifest:file-entry manifest:full-path="META-INF/container.xml" manifest:media-type="application/xml"/>
					<manifest:file-entry manifest:full-path="/" manifest:media-type="application/epub+zip"/>
				</manifest:manifest>
			</x:document>
		</x:expect>
	</x:scenario>
	
</x:description>

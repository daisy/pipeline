<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.daisy.pipeline.modules</groupId>
    <artifactId>modules-parent</artifactId>
    <version>1.14.28-SNAPSHOT</version>
    <relativePath>../../parent/</relativePath>
  </parent>

  <groupId>org.daisy.pipeline.modules.braille</groupId>
  <artifactId>liblouis-utils</artifactId>
  <version>6.2.1-SNAPSHOT</version>
  <packaging>bundle</packaging>

  <name>DP2 Braille Modules :: liblouis-utils</name>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.liblouis</groupId>
        <artifactId>louis</artifactId>
        <version>${liblouis.version}</version>
        <type>nar</type>
      </dependency>
      <dependency>
        <groupId>org.liblouis</groupId>
        <artifactId>louisutdml</artifactId>
        <version>2.11.0-p1</version>
        <type>nar</type>
      </dependency>
      <dependency>
        <groupId>org.daisy.libs</groupId>
        <artifactId>xml2</artifactId>
        <version>2.7.3</version>
        <type>nar</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.daisy.pipeline</groupId>
      <artifactId>common-utils</artifactId>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules.braille</groupId>
      <artifactId>braille-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules.braille</groupId>
      <artifactId>braille-css-utils</artifactId>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules.braille</groupId>
      <artifactId>pef-utils</artifactId>
    </dependency>
    <dependency>
      <groupId>org.daisy.libs</groupId>
      <artifactId>saxon-he</artifactId>
    </dependency>
    <dependency>
      <groupId>org.daisy.libs</groupId>
      <artifactId>com.xmlcalabash</artifactId>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline</groupId>
      <artifactId>calabash-adapter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.liblouis</groupId>
      <artifactId>liblouis-java</artifactId>
    </dependency>
    <dependency>
      <groupId>org.daisy.dotify</groupId>
      <artifactId>dotify.library</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <!--
        runtime dependencies
    -->
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>common-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>file-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>fileset-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <!--
        test dependencies
    -->
    <dependency>
      <groupId>org.daisy.pipeline.modules.braille</groupId>
      <artifactId>libhyphen-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.build</groupId>
      <artifactId>modules-test-helper</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.ops4j.pax.exam</groupId>
          <artifactId>pax-exam-container-native</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!--
        FIXME: why doesn't native work?
    -->
    <dependency>
      <groupId>org.ops4j.pax.exam</groupId>
      <artifactId>pax-exam-container-forked</artifactId>
      <version>4.12.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <properties>
    <liblouis.version>3.30.0-p1</liblouis.version>
    <liblouisutdml.liblouis.version>3.21.0-p2</liblouisutdml.liblouis.version>
    <expose-services>
      org.daisy.pipeline.braille.liblouis.impl.LiblouisTablePath_default_liblouis_tables,
      org.daisy.pipeline.braille.liblouis.impl.LiblouisTableDatatypeService,
      org.daisy.pipeline.braille.liblouis.impl.LiblouisTableJnaImplProvider,
      org.daisy.pipeline.braille.liblouis.impl.LiblouisTableRegistry,
      org.daisy.pipeline.braille.liblouis.impl.LiblouisTranslatorJnaImplProvider,
      org.daisy.pipeline.braille.liblouis.impl.LiblouisutdmlProcessBuilderImpl,
      org.daisy.pipeline.braille.liblouis.impl.LiblouisutdmlConfigRegistry,
      org.daisy.pipeline.braille.liblouis.impl.LiblouisMathMLTransform$Provider,
      org.daisy.pipeline.braille.liblouis.impl.LiblouisMathMLConfigPath,
      org.daisy.pipeline.braille.liblouis.pef.impl.LiblouisDisplayTableProvider,
      org.daisy.pipeline.braille.liblouis.calabash.impl.TranslateFileStep$Provider
    </expose-services>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>META-INF/catalog.xml</exclude>
        </excludes>
      </resource>
      <!--
          this is only needed for testing without OSGi, actual inclusion of resources is handled by maven-bundle-plugin
      -->
      <resource>
        <directory>${project.build.directory}/dependency/share/liblouis/tables/</directory>
        <targetPath>default-tables/</targetPath>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/native/liblouis/i386-Linux-gpp/</directory>
        <targetPath>native/linux/x86/</targetPath>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/native/liblouis/amd64-Linux-gpp/</directory>
        <targetPath>native/linux/x86_64/</targetPath>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/native/liblouisutdml/i386-Linux-gpp/</directory>
        <targetPath>native/linux/x86/liblouisutdml/</targetPath>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/native/liblouisutdml/amd64-Linux-gpp/</directory>
        <targetPath>native/linux/x86_64/liblouisutdml/</targetPath>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/native/liblouis/x86_64-MacOSX-gpp/</directory>
        <targetPath>native/macosx/x86_64/</targetPath>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/native/liblouis/aarch64-MacOSX-gpp/</directory>
        <targetPath>native/macosx/aarch64/</targetPath>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/native/liblouisutdml/x86_64-MacOSX-gpp/</directory>
        <targetPath>native/macosx/x86_64/liblouisutdml/</targetPath>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/native/liblouisutdml/aarch64-MacOSX-gpp/</directory>
        <targetPath>native/macosx/aarch64/liblouisutdml/</targetPath>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/native/liblouis/i686-w64-mingw32-gpp/</directory>
        <targetPath>native/windows/x86/</targetPath>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/native/liblouis/x86_64-w64-mingw32-gpp/</directory>
        <targetPath>native/windows/x86_64/</targetPath>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/native/liblouisutdml/i586-mingw32msvc-gpp/</directory>
        <targetPath>native/windows/x86/liblouisutdml/</targetPath>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources/native/liblouisutdml/i686-w64-mingw32-gpp/</directory>
        <targetPath>native/windows/x86/liblouisutdml/</targetPath>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-liblouis</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/dependency/liblouis</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louis</artifactId>
                  <classifier>i386-Linux-gpp-shared</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louis</artifactId>
                  <classifier>amd64-Linux-gpp-shared</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louis</artifactId>
                  <classifier>x86_64-MacOSX-gpp-shared</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louis</artifactId>
                  <classifier>aarch64-MacOSX-gpp-shared</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louis</artifactId>
                  <classifier>i686-w64-mingw32-gpp-executable</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louis</artifactId>
                  <classifier>x86_64-w64-mingw32-gpp-executable</classifier>
                  <type>nar</type>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-liblouisutdml</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/dependency/liblouisutdml</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louis</artifactId>
                  <classifier>i386-Linux-gpp-shared</classifier>
                  <type>nar</type>
                  <version>${liblouisutdml.liblouis.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louis</artifactId>
                  <classifier>amd64-Linux-gpp-shared</classifier>
                  <type>nar</type>
                  <version>${liblouisutdml.liblouis.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louis</artifactId>
                  <classifier>x86_64-MacOSX-gpp-shared</classifier>
                  <type>nar</type>
                  <version>${liblouisutdml.liblouis.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louis</artifactId>
                  <classifier>aarch64-MacOSX-gpp-shared</classifier>
                  <type>nar</type>
                  <version>${liblouisutdml.liblouis.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louis</artifactId>
                  <classifier>i686-w64-mingw32-gpp-executable</classifier>
                  <type>nar</type>
                  <version>${liblouisutdml.liblouis.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.daisy.libs</groupId>
                  <artifactId>xml2</artifactId>
                  <classifier>i586-mingw32msvc-gpp-executable</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louisutdml</artifactId>
                  <classifier>i386-Linux-gpp-shared</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louisutdml</artifactId>
                  <classifier>amd64-Linux-gpp-shared</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louisutdml</artifactId>
                  <classifier>x86_64-MacOSX-gpp-shared</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louisutdml</artifactId>
                  <classifier>aarch64-MacOSX-gpp-shared</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louisutdml</artifactId>
                  <classifier>i386-Linux-gpp-executable</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louisutdml</artifactId>
                  <classifier>amd64-Linux-gpp-executable</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louisutdml</artifactId>
                  <classifier>x86_64-MacOSX-gpp-executable</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louisutdml</artifactId>
                  <classifier>aarch64-MacOSX-gpp-executable</classifier>
                  <type>nar</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.liblouis</groupId>
                  <artifactId>louisutdml</artifactId>
                  <classifier>i686-w64-mingw32-gpp-executable</classifier>
                  <type>nar</type>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>prepare-package</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <copy todir="target/generated-resources/native/liblouis">
                  <fileset dir="target/dependency/liblouis">
                    <include name="**/*.so"/>
                    <include name="**/*.dylib"/>
                    <include name="**/*.dll"/>
                  </fileset>
                  <mapper>
                    <globmapper handledirsep="yes" from="bin/*" to="*"/>
                    <regexpmapper handledirsep="yes" from="lib/(.*)/shared/(.*)$" to="\1/\2"/>
                  </mapper>
                </copy>
                <copy todir="target/generated-resources/native/liblouisutdml">
                  <fileset dir="target/dependency/liblouisutdml">
                    <include name="**/*.so"/>
                    <include name="**/*.dylib"/>
                    <include name="**/*.dll"/>
                    <include name="**/file2brl"/>
                    <include name="**/file2brl.exe"/>
                  </fileset>
                  <mapper>
                    <globmapper handledirsep="yes" from="bin/*" to="*"/>
                    <regexpmapper handledirsep="yes" from="lib/(.*)/shared/(.*)$" to="\1/\2"/>
                  </mapper>
                </copy>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.daisy.pipeline.build</groupId>
        <artifactId>ds-to-spi-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-spi-classes</id>
            <phase>process-sources</phase>
            <goals>
              <goal>generate-spi-classes</goal>
            </goals>
            <configuration>
              <includes>
                ${expose-services},
                org.daisy.pipeline.braille.liblouis.impl.LiblouisExternalNativePath,
                org.daisy.pipeline.braille.liblouis.impl.mac.LiblouisNativePathForMacOS,
                org.daisy.pipeline.braille.liblouis.impl.linux.LiblouisNativePathForLinux,
                org.daisy.pipeline.braille.liblouis.impl.windows.LiblouisNativePathForWindows
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>generate-spi-test-classes</id>
            <phase>process-test-sources</phase>
            <goals>
              <goal>generate-spi-test-classes</goal>
            </goals>
            <configuration>
              <includes>
                TablePath,
                MockHyphenator$Provider
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <configuration>
          <instructions>
            <Import-Package>
              net.sf.saxon.*;version="${saxon.versionRange}",
              !org.daisy.common.spi,
              *
            </Import-Package>
            <Private-Package>
              ${generated-packages}
              org.daisy.pipeline.braille.liblouis.impl,
              org.daisy.pipeline.braille.liblouis.calabash.impl,
              org.daisy.pipeline.braille.liblouis.pef.impl,
              org.daisy.pipeline.braille.pef.impl;-split-package:=first
            </Private-Package>
            <!--
                exclude native and overwrite META-INF/services/org.daisy.pipeline.braille.common.NativePath
            -->
            <Include-Resource>
              src/main/resources/,
              default-tables
               =target/dependency/share/liblouis/tables,
              META-INF/services
               =target/generated-resources/spi/META-INF/services,
              META-INF/services/org.daisy.pipeline.braille.common.NativePath;literal
               ='org.daisy.pipeline.braille.liblouis.impl.LiblouisExternalNativePath_SPI'
            </Include-Resource>
          </instructions>
        </configuration>
        <executions>
          <execution>
            <id>bundle-before-test</id>
            <configuration>
              <instructions>
                <Bundle-Activator>org.daisy.pipeline.braille.liblouis.impl.LiblouisExternalNativePath$Activator</Bundle-Activator>
                <SPI-Provider>javax.imageio.spi.ServiceRegistry</SPI-Provider>
                <Provide-Capability>
                  xpath.function;name="{http://liblouis.org/liblouis}hyphenate",
                  xproc.step;name="{http://liblouis.org/liblouis}translate-file"
                </Provide-Capability>
              </instructions>
            </configuration>
          </execution>
          <execution>
            <id>linux-bundle</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
            <configuration>
              <classifier>linux</classifier>
              <instructions combine.self="replace">
                <_dsannotations>org.daisy.pipeline.braille.liblouis.impl.linux.LiblouisNativePathForLinux</_dsannotations>
                <Bundle-SymbolicName>org.daisy.pipeline.modules.braille.liblouis-utils-linux</Bundle-SymbolicName>
                <Export-Package/>
                <Import-Package>!org.daisy.common.spi,*</Import-Package>
                <Private-Package>
                  org.daisy.pipeline.braille.liblouis.impl.linux
                </Private-Package>
                <Include-Resource>
                  META-INF/services/org.daisy.pipeline.braille.common.NativePath;literal
                   ='org.daisy.pipeline.braille.liblouis.impl.linux.LiblouisNativePathForLinux_SPI',
                  native/linux/x86=target/generated-resources/native/liblouis/i386-Linux-gpp,
                  native/linux/x86_64=target/generated-resources/native/liblouis/amd64-Linux-gpp,
                  native/linux/x86/liblouisutdml=target/generated-resources/native/liblouisutdml/i386-Linux-gpp,
                  native/linux/x86_64/liblouisutdml=target/generated-resources/native/liblouisutdml/amd64-Linux-gpp
                </Include-Resource>
              </instructions>
            </configuration>
          </execution>
          <execution>
            <id>mac-bundle</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
            <configuration>
              <classifier>mac</classifier>
              <instructions>
                <_dsannotations>org.daisy.pipeline.braille.liblouis.impl.mac.LiblouisNativePathForMacOS</_dsannotations>
                <Bundle-SymbolicName>org.daisy.pipeline.modules.braille.liblouis-utils-mac</Bundle-SymbolicName>
                <Export-Package/>
                <Import-Package>!org.daisy.common.spi,*</Import-Package>
                <Private-Package>
                  org.daisy.pipeline.braille.liblouis.impl.mac
                </Private-Package>
                <Include-Resource>
                  META-INF/services/org.daisy.pipeline.braille.common.NativePath;literal
                   ='org.daisy.pipeline.braille.liblouis.impl.mac.LiblouisNativePathForMacOS_SPI',
                  native/macosx/x86_64=target/generated-resources/native/liblouis/x86_64-MacOSX-gpp,
                  native/macosx/aarch64=target/generated-resources/native/liblouis/aarch64-MacOSX-gpp,
                  native/macosx/x86_64/liblouisutdml=target/generated-resources/native/liblouisutdml/x86_64-MacOSX-gpp,
                  native/macosx/aarch64/liblouisutdml=target/generated-resources/native/liblouisutdml/aarch64-MacOSX-gpp
                </Include-Resource>
              </instructions>
            </configuration>
          </execution>
          <execution>
            <id>windows-bundle</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
            <configuration>
              <classifier>windows</classifier>
              <instructions>
                <_dsannotations>org.daisy.pipeline.braille.liblouis.impl.windows.LiblouisNativePathForWindows</_dsannotations>
                <Bundle-SymbolicName>org.daisy.pipeline.modules.braille.liblouis-utils-windows</Bundle-SymbolicName>
                <Export-Package/>
                <Import-Package>!org.daisy.common.spi,*</Import-Package>
                <Private-Package>
                  org.daisy.pipeline.braille.liblouis.impl.windows
                </Private-Package>
                <Include-Resource>
                  META-INF/services/org.daisy.pipeline.braille.common.NativePath;literal
                   ='org.daisy.pipeline.braille.liblouis.impl.windows.LiblouisNativePathForWindows_SPI',
                  native/windows/x86=target/generated-resources/native/liblouis/i686-w64-mingw32-gpp,
                  native/windows/x86_64=target/generated-resources/native/liblouis/x86_64-w64-mingw32-gpp,
                  native/windows/x86/liblouisutdml/file2brl.exe=target/generated-resources/native/liblouisutdml/i686-w64-mingw32-gpp/file2brl.exe,
                  native/windows/x86/liblouisutdml/liblouisutdml.dll=target/generated-resources/native/liblouisutdml/i686-w64-mingw32-gpp/liblouisutdml.dll,
                  native/windows/x86/liblouisutdml/liblouis.dll=target/generated-resources/native/liblouisutdml/i686-w64-mingw32-gpp/liblouis.dll,
                  native/windows/x86/liblouisutdml/libxml2.dll=target/generated-resources/native/liblouisutdml/i586-mingw32msvc-gpp/libxml2.dll
                </Include-Resource>
              </instructions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.daisy.maven</groupId>
        <artifactId>xspec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>xspecTest</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.daisy.pipeline.build</groupId>
        <artifactId>modules-build-helper</artifactId>
        <executions>
          <execution>
            <id>process-test-catalog</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>process-test-catalog</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>module-with-documentation</id>
      <activation>
        <property>
          <name>documentation</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.daisy.pipeline.build</groupId>
            <artifactId>modules-build-helper</artifactId>
            <executions>
              <execution>
                <id>htmlize-sources</id>
                <configuration>
                  <!--
                      include tables
                  -->
                  <includes>
                    src/main/resources/META-INF/catalog.xml,
                    src/main/resources/**/*.xpl,
                    src/main/resources/**/*.xsl,
                    src/main/resources/tables/,
                    src/main/resources/tables/*
                  </includes>
                </configuration>
              </execution>
              <execution>
                <!--
                    include default-tables as if they were present in src/main/resources
                -->
                <id>htmlize-default-tables</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>htmlize-sources</goal>
                </goals>
                <configuration>
                  <sourceDirectory>${project.build.directory}/dependency/share/liblouis/tables</sourceDirectory>
                  <outputDirectory>${project.build.directory}/doc/src/main/resources/default-tables</outputDirectory>
                  <includes>./,*</includes>
                </configuration>
              </execution>
              <execution>
                <id>package-list</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>dependencies-package-list</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/dependencies-package-list/</outputDirectory>
                  <includes>
                    org.daisy.pipeline.*,
                    org.daisy.common.*
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <offlineLinks>
                    <offlineLink>
                      <url>http://daisy.github.io/pipeline/api/</url>
                      <location>${project.build.directory}/dependencies-package-list/</location>
                    </offlineLink>
                  </offlineLinks>
                  <links>
                    <link>https://google.github.io/guava/releases/15.0/api/docs</link>
                  </links>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>module-with-documentation-only</id>
      <activation>
        <property>
          <name>documentation-only</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <executions>
              <execution>
                <id>linux-bundle</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>mac-bundle</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>windows-bundle</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
        this is a hack to reduce snapshot dependencies to current platform only
    -->
    <profile>
      <id>liblouis-snapshot-dependency</id>
      <activation>
        <!-- enable if ${liblouis.version} is a SNAPSHOT -->
        <property>
          <name>liblouis-snapshot</name>
        </property>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.maven-nar</groupId>
            <artifactId>nar-maven-plugin</artifactId>
            <version>3.4.0</version>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>nar-validate</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!--
              don't bother to delete the non-snapshot, just overwrite it
          -->
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-liblouis-snapshot</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/dependency/liblouis</outputDirectory>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.liblouis</groupId>
                      <artifactId>louis</artifactId>
                      <classifier>${nar.aol}-shared</classifier>
                      <version>${liblouis.version}</version>
                      <type>nar</type>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>generate-liblouis-files</id>
      <activation>
        <!--
            activeByDefault does not work when other profiles present
        -->
        <property>
          <name>!skip-generate-liblouis-files</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-liblouis-tables</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.liblouis</groupId>
                      <artifactId>louis</artifactId>
                      <classifier>noarch</classifier>
                      <type>nar</type>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>generate-liblouis-mathml-files</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-liblouisutdml-files</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.liblouis</groupId>
                      <artifactId>louis</artifactId>
                      <classifier>noarch</classifier>
                      <version>${liblouisutdml.liblouis.version}</version>
                      <type>nar</type>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.liblouis</groupId>
                      <artifactId>louisutdml</artifactId>
                      <classifier>noarch</classifier>
                      <type>nar</type>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- WARNING: *nix only -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <execution>
                <id>filter-liblouis-files</id>
                <phase>process-sources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>filter_liblouis_files.sh</executable>
                  <workingDirectory>target</workingDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.daisy.pipeline.modules.braille</groupId>
          <artifactId>libhyphen-utils</artifactId>
          <classifier>mac</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <name>linux</name>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.daisy.pipeline.modules.braille</groupId>
          <artifactId>libhyphen-utils</artifactId>
          <classifier>linux</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>win</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.daisy.pipeline.modules.braille</groupId>
          <artifactId>libhyphen-utils</artifactId>
          <classifier>windows</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

</project>
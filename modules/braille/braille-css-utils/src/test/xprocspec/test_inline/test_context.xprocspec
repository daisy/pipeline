<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.daisy.org/ns/xprocspec"
               xmlns:p="http://www.w3.org/ns/xproc"
               xmlns:px="http://www.daisy.org/ns/pipeline/xproc"
               xmlns:c="http://www.w3.org/ns/xproc-step"
               xmlns:d="http://www.daisy.org/ns/pipeline/data">
  
  <!-- wrap px:css-cascade because XProcSpec read all the outputs including the result.parameters
       output which is not supported when source is a d:fileset -->
  <x:script>
    <p:declare-step type="x:test" name="main" version="1.0">
      <p:input port="source" primary="true"/>
      <p:input port="source.in-memory" sequence="true"/>
      <p:option name="user-stylesheet"/>
      <p:output port="result" primary="true"/>
      <p:output port="result.in-memory" sequence="true">
        <p:pipe step="cascade" port="result.in-memory"/>
      </p:output>
      <p:import href="http://www.daisy.org/pipeline/modules/css-utils/library.xpl"/>
      <px:css-cascade name="cascade">
        <p:input port="source.in-memory">
          <p:pipe step="main" port="source.in-memory"/>
        </p:input>
        <p:with-option name="user-stylesheet" select="$user-stylesheet"/>
      </px:css-cascade>
    </p:declare-step>
  </x:script>
  
  <x:scenario label="test_01">
    <x:call step="x:test">
      <x:input port="source">
        <x:document type="inline">
          <d:fileset>
            <d:file href="doc.html" media-type="application/xhtml+xml"/>
            <d:file href="default.scss" media-type="text/x-scss"/>
            <d:file href="mod.scss" media-type="text/x-scss"/>
          </d:fileset>
        </x:document>
      </x:input>
      <x:input port="source.in-memory">
        <x:document type="inline" xml:base="doc.html">
          <html>
            <body>
              <h>foobar</h>
            </body>
          </html>
        </x:document>
        <x:document type="inline" xml:base="default.scss">
          <c:result content-type="text/plain">
            @import "mod.scss";
            h {
              text-align: center
            }
          </c:result>
        </x:document>
        <x:document type="inline" xml:base="mod.scss">
          <c:result content-type="text/plain">
            h {
              page-break-after: avoid
            }
          </c:result>
        </x:document>
      </x:input>
      <x:option name="user-stylesheet" select="resolve-uri('default.scss')"/>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result.in-memory" select="/*[ends-with(base-uri(.),'/doc.html')]"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <html>
          <body>
            <h style="page-break-after: avoid; text-align: center;">foobar</h>
          </body>
        </html>
      </x:document>
    </x:expect>
  </x:scenario>
  
</x:description>

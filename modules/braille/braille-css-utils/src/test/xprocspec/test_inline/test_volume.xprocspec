<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.daisy.org/ns/xprocspec/xprocspec.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<x:description xmlns:x="http://www.daisy.org/ns/xprocspec"
               xmlns:px="http://www.daisy.org/ns/pipeline/xproc"
               script="http://www.daisy.org/pipeline/modules/css-utils/library.xpl">
  
  <x:scenario label="test_01">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                @volume {
                  min-length: 80;
                  max-length: 100;
                }
                @volume:first {
                  max-length: 120;
                }
                @volume:last {
                  min-length: 0;
                }
                @volume:nth(2) {
                  max-length: auto;
                }
              </style>
            </head>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//document"/>
    </x:context>
    <x:expect label="root-style" type="xpath" test="/*/@style"
              equals="'@volume { min-length: 80; max-length: 100; } @volume:last { min-length: 0; max-length: 100; } @volume:only { max-length: 120; min-length: 0; } @volume:nth(2) { max-length: auto; min-length: 80; } @volume:first { max-length: 120; min-length: 80; }'"/>
  </x:scenario>
  
  <x:scenario label="test_02">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                @volume {
                  max-length: 100;
                  @begin {
                    content: flow(toc);
                  }
                }
                @volume:first {
                  @begin {
                    content: flow(cover) flow(toc);
                  }
                }
              </style>
            </head>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//document"/>
    </x:context>
    <x:expect label="root-style" type="xpath" test="/*/@style"
              equals='"@volume { max-length: 100; @begin { content: flow(toc); } } @volume:first { max-length: 100; @begin { content: flow(cover) flow(toc); } }"'/>
  </x:scenario>
  
  <x:scenario label="test_03">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                @volume {
                  @begin {
                    content: flow(volume-toc);
                  }
                }
                @volume  {
                  max-length: 75;
                }
              </style>
            </head>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//document"/>
    </x:context>
    <x:expect label="root-style" type="xpath" test="/*/@style"
              equals="'@volume { max-length: 75; @begin { content: flow(volume-toc); } }'"/>
  </x:scenario>
  
  <x:scenario label="test_04">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                @page {
                  size: 15 5;
                }
                @page front {
                  @top-right {
                    content: counter(page);
                  }
                }
                @volume {
                  @begin {
                    content: flow(frontmatter);
                    page: front;
                  }
                }
                @volume  {
                  max-length: 75;
                }
              </style>
            </head>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//document"/>
    </x:context>
    <x:expect label="root-style" type="xpath" test="/*/@style"
              equals="'@page { size: 15 5; } @volume { max-length: 75; @begin { content: flow(frontmatter); @page { size: 15 5; @top-right { content: counter(page); } } } }'"/>
  </x:scenario>
  
  <x:scenario label="test_05">
    <x:documentation>
      Tests that "@volume :first", which is what SASS makes from "@volume:first", is supported.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                @volume :first {
                  max-length: 75;
                }
              </style>
            </head>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//document"/>
    </x:context>
    <x:expect label="root-style" type="xpath" test="/*/@style"
              equals="'@volume:first { max-length: 75; }'"/>
  </x:scenario>
  
  <x:scenario label="test_06">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                bodymatter, rearmatter {
                  volume-break-before: always;
                }
                bodymatter > section {
                  volume-break-inside: -obfl-keep(2);
                }
                bodymatter > section > section {
                  volume-break-inside: avoid;
                }
              </style>
            </head>
            <body>
              <frontmatter/>
              <bodymatter>
                <section>
                  <section/>
                </section>
                <section/>
              </bodymatter>
              <rearmatter/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <frontmatter/>
          <bodymatter style="volume-break-before: always;">
            <section style="volume-break-inside: -obfl-keep(2);">
              <section style="volume-break-inside: avoid;"/>
            </section>
            <section style="volume-break-inside: -obfl-keep(2);"/>
          </bodymatter>
          <rearmatter style="volume-break-before: always;"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_07">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                @-obfl-volume-transition {
                  @any-interrupted {
                    content: flow(volume-end);
                  }
                }
              </style>
            </head>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//document"/>
    </x:context>
    <x:expect label="root-style" type="xpath" test="/*/@style"
              equals="'@-obfl-volume-transition { @any-interrupted { content: flow(volume-end); } }'"/>
  </x:scenario>
  
</x:description>

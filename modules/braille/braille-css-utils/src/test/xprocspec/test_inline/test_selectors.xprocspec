<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.daisy.org/ns/xprocspec/xprocspec.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<x:description xmlns:x="http://www.daisy.org/ns/xprocspec"
               xmlns:px="http://www.daisy.org/ns/pipeline/xproc"
               script="http://www.daisy.org/pipeline/modules/css-utils/library.xpl">
  
  <!--
      Universal selector
  -->
  <x:scenario label="test_01">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                * { display: block }
              </style>
            </head>
            <body>
              <h>foo</h>
              <p>foo</p>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body style="display: block;">
          <h style="display: block;">foo</h>
          <p style="display: block;">foo</p>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <!--
      Type selector
  -->
  <x:scenario label="test_02">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                p { display: block }
              </style>
            </head>
            <body>
              <p>foo</p>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <p style="display: block;">foo</p>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <!--
      Descendant selector
  -->
  <x:scenario label="test_03">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                section p { display: block }
              </style>
            </head>
            <body>
              <p>foo</p>
              <section>
                <p>foo</p>
              </section>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <p>foo</p>
          <section>
            <p style="display: block;">foo</p>
          </section>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <!--
      Child selector
  -->
  <x:scenario label="test_04">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                section > p { display: block }
              </style>
            </head>
            <body>
              <section>
                <p>foo</p>
                <sidebar>
                  <p>foo</p>
                </sidebar>
              </section>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <section>
            <p style="display: block;">foo</p>
            <sidebar>
              <p>foo</p>
            </sidebar>
          </section>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <!--
      Adjacent selector
  -->
  <x:scenario label="test_05">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                h + p { display: block }
              </style>
            </head>
            <body>
              <h>foo</h>
              <p>foo</p>
              <p>foo</p>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h>foo</h>
          <p style="display: block;">foo</p>
          <p>foo</p>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <!--
      Attribute selectors
  -->
  <x:scenario label="test_06">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                [foo] { display: block }
                h[foo] { margin-left: 1 }
                [foo="bar"] { margin-right: 1 }
                [foo~="bar"] { margin-top: 1 }
                [foo|="bar"] { margin-bottom: 1 }
              </style>
            </head>
            <body>
              <h foo="foo"/>
              <p foo="foo"/>
              <p foo="bar"/>
              <p foo="barz"/>
              <p foo="bar-z"/>
              <p foo="bar baz"/>
              <p>foo</p>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h foo="foo" style="display: block; margin-left: 1;"/>
          <p foo="foo" style="display: block;"/>
          <p foo="bar" style="display: block; margin-bottom: 1; margin-right: 1; margin-top: 1;"/>
          <p foo="barz" style="display: block;"/>
          <p foo="bar-z" style="display: block; margin-bottom: 1;"/>
          <p foo="bar baz" style="display: block; margin-top: 1;"/>
          <p>foo</p>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <!--
      Class selectors
  -->
  <x:scenario label="test_07">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                .foo { display: block }
                h.foo { margin-left: 1 }
              </style>
            </head>
            <body>
              <h class="foo"/>
              <p class="foo"/>
              <p class="foobar"/>
              <p class="foo bar"/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h class="foo" style="display: block; margin-left: 1;"/>
          <p class="foo" style="display: block;"/>
          <p class="foobar"/>
          <p class="foo bar" style="display: block;"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <!--
      ID selectors
  -->
  <x:scenario label="test_08">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                #foo { display: block }
                p#bar { margin-left: 1 }
				#baz { hyphens: auto; }
              </style>
            </head>
            <body>
              <p id="foo"/>
              <p id="bar"/>
              <p xml:id="baz"/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <p id="foo" style="display: block;"/>
          <p id="bar" style="margin-left: 1;"/>
          <p xml:id="baz"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <!--
      Pseudo classes
  -->
  <x:scenario label="test_09">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                li:first-child { margin-left: 1 }
                li:last-child { margin-right: 1 }
                li:nth-child(3) { margin-top: 1 }
                li:only-child { margin-bottom: 1 }
                pagenum:top-of-page { display: none }
              </style>
            </head>
            <body>
              <ul>
                <li/>
                <li/>
                <li>
                  <ol>
                    <li/>
                  </ol>
                </li>
                <li/>
              </ul>
              <pagenum/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <ul>
            <li style="margin-left: 1;"/>
            <li/>
            <li style="margin-top: 1;">
              <ol>
                <li style="margin-bottom: 1; margin-left: 1; margin-right: 1;"/>
              </ol>
            </li>
            <li style="margin-right: 1;"/>
          </ul>
          <pagenum style="&amp;:top-of-page { display: none; }"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <!--
      Pseudo elements (including stacking and functions)
  -->
  <x:scenario label="test_10">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                p { display: block }
                p::before { display: block }
                p::after { display: block }
                p::after::before { display: block }
                p::table-by(foo) { display: block }
              </style>
            </head>
            <body>
              <p>foobar</p>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <p style="display: block; &amp;::after { display: block; } &amp;::after::before { display: block; } &amp;::before { display: block; } &amp;::table-by(foo) { display: block; }">foobar</p>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <!--
      Bringing pseudo-classes in the mix
  -->
  <x:scenario label="test_10b">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                table {
                  display: table;
                  -obfl-table-col-spacing: 1;
                  -obfl-scenario-cost: -obfl-evaluate('$forced-break-count'); }
                table:-obfl-alternate-scenario {
                  -obfl-scenario-cost: 3;
                  display: block;
                  render-table-by:row; }
                table:-obfl-alternate-scenario::table-by(row) {
                  display:block;
                  margin-left:2; }
                table:-obfl-alternate-scenario::table-by(row)::list-item {
                  display:block; }
                table:-obfl-alternate-scenario::table-by(row)::list-item:first-child {
                  text-indent:-2;
              </style>
            </head>
            <body>
              <table/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <table style="-obfl-scenario-cost: -obfl-evaluate('$forced-break-count'); -obfl-table-col-spacing: 1; display: table; &amp;:-obfl-alternate-scenario { -obfl-scenario-cost: 3; display: block; render-table-by: row; } &amp;:-obfl-alternate-scenario::table-by(row) { display: block; margin-left: 2; } &amp;:-obfl-alternate-scenario::table-by(row)::list-item { display: block; }"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <!--
      Root selector
  -->
  <x:scenario label="test_11">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                :root { display: block }
              </style>
            </head>
            <body>
              <p>foobar</p>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <document style="display: block;">
          <head>
            <style media="embossed" type="text/css">
              :root { display: block }
            </style>
          </head>
          <body>
            <p>foobar</p>
          </body>
        </document>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <!--
      Descendant selector inside pseudo class
  -->
  <x:scenario label="test_12">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                table:-obfl-alternate-scenario tr:blank::after {
                  content: "(empty)"
                }
              </style>
            </head>
            <body>
              <table>
                <tr/>
              </table>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <table style="&amp;:-obfl-alternate-scenario tr:blank::after { content: &apos;(empty)&apos;; }">
            <tr/>
          </table>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <!--
      Child selector followed by descendant selector: A > B C
      
      This does not select the C that have multiple B ancestors (bug).
  -->
  <x:scenario label="test_13" xfail="jstyleparser bug">
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style media="embossed" type="text/css">
                body > section p { display: block }
              </style>
            </head>
            <body>
              <section>
                <p>foo</p>
                <section>
                  <p>foo</p>
                </section>
              </section>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <section>
            <p style="display: block;">foo</p>
            <section>
              <p style="display: block;">foo</p>
            </section>
          </section>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
</x:description>

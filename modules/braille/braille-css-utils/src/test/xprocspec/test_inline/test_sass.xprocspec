<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.daisy.org/ns/xprocspec"
               xmlns:px="http://www.daisy.org/ns/pipeline/xproc"
               script="http://www.daisy.org/pipeline/modules/css-utils/library.xpl">
  
  <x:scenario label="test_01">
    <x:documentation>
      Link SASS style sheet stored locally.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <link type="text/x-scss" rel="stylesheet" href="../../resources/sass/sass_1.scss" media="embossed"/>
            </head>
            <body>
              <h1/>
              <p/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h1/>
          <p style="border-bottom-align: center; border-bottom-pattern: ⠒; border-bottom-style: none; border-bottom-width: 1; border-top-align: center; border-top-pattern: ⠒; border-top-style: none; border-top-width: 1;"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_02">
    <x:documentation>
      Link SASS style sheet stored in module.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <link type="text/x-scss" rel="stylesheet" href="http://test/css-module/sass/sass_1.scss" media="embossed"/>
            </head>
            <body>
              <h1/>
              <p/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h1 style="display: block; margin-left: 4;"/>
          <p/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_03">
    <x:documentation>
      From (embedded) CSS style sheet import SASS style sheet stored locally.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style type="text/css" media="embossed">
                @import url("../../resources/sass/sass_1.scss");
              </style>
            </head>
            <body>
              <h1/>
              <p/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h1/>
          <p style="border-bottom-align: center; border-bottom-pattern: ⠒; border-bottom-style: none; border-bottom-width: 1; border-top-align: center; border-top-pattern: ⠒; border-top-style: none; border-top-width: 1;"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_04">
    <x:documentation>
      From (linked) SASS style sheet stored locally import CSS style sheet stored locally.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <link type="text/x-scss" rel="stylesheet" href="../../resources/sass/sass_2_imports_css_1.scss" media="embossed"/>
            </head>
            <body>
              <h1/>
              <p/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h1 style="display: block;"/>
          <p style="display: block;"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_05">
    <x:documentation>
      From (linked) SASS style sheet stored locally import CSS style sheet stored in module.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <link type="text/x-scss" rel="stylesheet" href="../../resources/sass/sass_3_imports_module_css_1.scss" media="embossed"/>
            </head>
            <body>
              <h1/>
              <p/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h1/>
          <p style="orphans: 3;"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_06">
    <x:documentation>
      From (linked) SASS style sheet stored locally import SASS style sheet stored locally.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <link type="text/x-scss" rel="stylesheet" href="../../resources/sass/sass_4_imports_sass_1.scss" media="embossed"/>
            </head>
            <body>
              <h1/>
              <p/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h1/>
          <p style="border-bottom-align: center; border-bottom-pattern: ⠒; border-bottom-style: none; border-bottom-width: 1; border-top-align: center; border-top-pattern: ⠒; border-top-style: none; border-top-width: 1;"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_07">
    <x:documentation>
      From (linked) SASS style sheet stored locally import SASS style sheet stored in module.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <link type="text/x-scss" rel="stylesheet" href="../../resources/sass/sass_5_imports_module_sass_2.scss" media="embossed"/>
            </head>
            <body>
              <h1/>
              <p/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h1/>
          <p style="string-set: footer 'foo';"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_08">
    <x:documentation>
      From (linked) SASS style sheet stored in module import CSS style sheet that is private to that module.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <link type="text/x-scss" rel="stylesheet" href="http://test/css-module/sass/sass_3_imports_css_3.scss" media="embossed"/>
            </head>
            <body>
              <h1/>
              <p/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h1/>
          <p style="hyphens: auto;"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_09">
    <x:documentation>
      From (linked) SASS style sheet stored in module import SASS style sheet that is private to that module.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <link type="text/x-scss" rel="stylesheet" href="http://test/css-module/sass/sass_4_imports_sass_5.scss" media="embossed"/>
            </head>
            <body>
              <h1/>
              <p/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h1/>
          <p style="hyphens: auto;"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_10">
    <x:documentation>
      Inject SASS variables.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <link type="text/x-scss" rel="stylesheet" href="../../resources/sass/sass_1.scss" media="embossed"/>
            </head>
            <body>
              <h1/>
              <p/>
            </body>
          </document>
        </x:document>
      </x:input>
      <x:param port="parameters" name="border" select="'⠿'"/>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h1/>
          <p style="border-bottom-align: center; border-bottom-pattern: ⠿; border-bottom-style: none; border-bottom-width: 1; border-top-align: center; border-top-pattern: ⠿; border-top-style: none; border-top-width: 1;"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_11">
    <x:documentation>
      Allow using SASS variables with special characters.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <link type="text/x-scss" rel="stylesheet" href="../../resources/sass/sass_6.scss" media="embossed"/>
            </head>
            <body>
              <h1/>
              <p/>
            </body>
          </document>
        </x:document>
      </x:input>
      <x:param port="parameters" name="padding-left" select="'A great lot'':!'"/>
      <x:param port="parameters" name="margin-left" select="'a lot'"/>
      <x:param port="parameters" name="padding-right" select="'something'"/>
      <x:param port="parameters" name="margin-right" select="'''something'''"/>
      <x:param port="parameters" name="padding-top" select="''"/>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h1/>
          <p style="margin-left: 3; margin-right: 2; padding-left: 3; padding-right: 2; padding-top: 0;"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_12">
    <x:documentation>
      Embedded SASS.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style type="text/x-scss" media="embossed">
                body {
                  h1 {
                    display: block;
                    margin-left: 4;
                  }
                }
              </style>
            </head>
            <body>
              <h1/>
              <p/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <h1 style="display: block; margin-left: 4;"/>
          <p/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_13">
    <x:documentation>
      Test @extend feature.

      In this test a pseudo element is added to a normal element with a pseudo class.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style type="text/x-scss" media="embossed">
                <![CDATA[
                %table-linearized {
                    &::table-by(row) {
                        display: block;
                        margin-left: 2;
                    }
                }
                table:not([class]) {
                    @extend %table-linearized
                }
                ]]>
              </style>
            </head>
            <body>
              <table class="foo"/>
              <table/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <table class="foo"/>
          <table style="&amp;::table-by(row) { display: block; margin-left: 2; }"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_14">
    <x:documentation>
      Test that stacking a pseudo element onto another pseudo element using @extend is not supported
      by SASS (because in plain CSS pseudo-elements can not be stacked).
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style type="text/x-scss" media="embossed">
                <![CDATA[
                %generated-content {
                    content: 'foo';
                    &::after {
                        content: 'bar';
                        text-transform: uppercase;
                    }
                }
                div::after {
                    @extend %generated-content;
                }
                ]]>
              </style>
            </head>
            <body>
              <div/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <div style="&amp;::after { content: 'foo'; } &amp;::after::after { content: 'bar'; text-transform: uppercase; }"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>
  
  <x:scenario label="test_15">
    <x:documentation>
      That that stacking a pseudo class onto a pseudo element using @extend is also not supported by
      SASS. Because in plain CSS a pseudo element can not have a pseudo class, SASS moves the pseudo
      classes to the beginning.
    </x:documentation>
    <x:call step="px:css-cascade">
      <x:input port="source">
        <x:document type="inline">
          <document>
            <head>
              <style type="text/x-scss" media="embossed">
                <![CDATA[
                table::table-by(row)::list-item {
                    @extend %table-row
                }
                %table-row {
                    display: block;
                    margin-left: 2;
                    &:first-child {
                        text-indent: -2;
                    }
                }
                ]]>
              </style>
            </head>
            <body>
              <table/>
            </body>
          </document>
        </x:document>
      </x:input>
    </x:call>
    <x:context label="result">
      <x:document type="port" port="result" select="//body"/>
    </x:context>
    <x:expect label="result" type="compare">
      <x:document type="inline">
        <body>
          <table style="&amp;::table-by(row)::list-item { display: block; margin-left: 2; } &amp;::table-by(row)::list-item:first-child { text-indent: -2; }"/>
        </body>
      </x:document>
    </x:expect>
  </x:scenario>

</x:description>

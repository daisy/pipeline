{
  "displayName": "DAISY Pipeline",
  "name": "pipeline-ui",
  "description": "User interface for the DAISY Pipeline",
  "version": "0.2.0-alpha",
  "main": "./node_modules/.dev-temp-build/main.js",
  "devTempBuildFolder": "./node_modules/.dev-temp-build",
  "devServer": "http://localhost:4927",
  "author": {
    "name": "DAISY Consortium",
    "email": "daisy-pipeline@mail.daisy.org"
  },
  "contributors": [
    {
      "name": "Marisa DeMeglio",
      "email": "marisa.demeglio@gmail.com"
    },
    {
      "name": "Nicolas Pavie",
      "email": "pavie.nicolas@gmail.com"
    }
  ],
  "license": "MIT",
  "scripts": {
    "start": "electron .",
    "build": "cross-env NODE_ENV=production yarn r clean webpack:main webpack:renderer",
    "postbuild": "node ./bin/modules/postbuild/index.js permissions",
    "predev": "cross-var \"rimraf $npm_package_devTempBuildFolder\"",
    "dev": "concurrently \"cross-env BROWSER=none yarn dev:renderer\" \"yarn r server:wait permissions nodemon:start\"",
    "dev:main": "cross-env NODE_ENV=development yarn r webpack:main start",
    "dev:renderer": "cross-env NODE_ENV=development yarn r webpack:renderer webpack:serve",
    "postinstall": "yarn r build install:deps",
    "install:deps": "electron-builder install-app-deps",
    "make:release": "node ./bin/modules/release/index.js",
    "webpack:main": "webpack --config ./webpack/main.config.js",
    "webpack:renderer": "webpack --config ./webpack/renderer.config.js",
    "webpack:serve": "webpack serve --config ./webpack/renderer.config.js",
    "server:wait": "cross-var \"wait-on $npm_package_devServer\"",
    "nodemon:start": "nodemon --watch src/main --watch src/renderer/bridge --watch src/shared --ignore src/resources --ext \"*\" --exec yarn dev:main",
    "predist": "yarn build",
    "dist": "./node_modules/.bin/electron-builder",
    "release": "electron-builder --publish always",
    "clean": "rimraf dist",
    "prepare": "husky install",
    "r": "yarn run-s",
    "permissions": "chmod -R +x ./node_modules/.dev-temp-build/resources"
  },
  "dependencies": {
    "@tanstack/react-query": "^4.2.1",
    "@types/marked": "^4.0.7",
    "decompress": "^4.2.1",
    "electron-log": "^4.4.8",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-markdown": "^8.0.3",
    "react-router-dom": "^6.3.0",
    "react-tabs": "^5.1.0",
    "remark-gfm": "^3.0.1"
  },
  "devDependencies": {
    "@commitlint/cli": "^17.0.3",
    "@commitlint/config-conventional": "^17.0.3",
    "@daltonmenezes/electron-devtools-installer": "^1.0.1",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.7",
    "@svgr/webpack": "^6.3.1",
    "@swc/cli": "^0.1.57",
    "@swc/core": "^1.2.237",
    "@types/decompress": "^4.2.4",
    "@types/node": "^18.7.23",
    "@types/react": "^18.0.17",
    "@types/react-dom": "^18.0.6",
    "@typescript-eslint/eslint-plugin": "^5.33.1",
    "@typescript-eslint/parser": "^5.33.1",
    "concurrently": "^7.3.0",
    "copy-webpack-plugin": "^11.0.0",
    "cross-env": "^7.0.3",
    "cross-var": "^1.1.0",
    "css-loader": "^6.7.1",
    "electron": "21.3.1",
    "electron-builder": "23.6.0",
    "electron-notarize": "^1.2.2",
    "electron-react-devtools": "^0.5.3",
    "eslint": "^8.22.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^4.2.1",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^5.5.0",
    "husky": "^8.0.1",
    "lint-staged": "^13.0.3",
    "nodemon": "^2.0.19",
    "npm-run-all": "^4.1.5",
    "open": "^8.4.0",
    "prettier": "^2.7.1",
    "react-refresh": "^0.14.0",
    "rimraf": "^3.0.2",
    "sass": "^1.54.4",
    "sass-loader": "^13.0.2",
    "semver": "^7.3.7",
    "simple-progress-webpack-plugin": "^2.0.0",
    "style-loader": "^3.3.1",
    "swc-loader": "^0.2.3",
    "tsconfig-paths-webpack-plugin": "^4.0.0",
    "typescript": "^4.7.4",
    "typescript-plugin-css-modules": "^3.4.0",
    "wait-on": "^6.0.1",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0",
    "webpack-dev-server": "^4.10.0"
  },
  "lint-staged": {
    "*.{js,ts}": [
      "eslint --quiet --fix"
    ]
  },
  "eslintIgnore": [
    "dist"
  ]
}
